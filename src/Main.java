import java.util.Scanner;

public class Main {
    /*
   Задача
   Реализовать игру "Камень, ножницы, бумага". Для игры человека против человека
    */

    /*
   Теория
   Предположим, что этот проект является частью проекта RSP и мы расширяем его функционал при помощи уже имеющихся
   методов и переменных. Перед нами стоит задача - сгенерировать два хода для человека и передать их на проверку
   методу checkWinner, данному методу неважно проверяет ли он ход компьютера или ход человека, он сравнивает две
   переданные ему строки. Но метод makeHumanMove является процедурой, он просто изменяет значение глобальной
   переменной, поэтому второй вызов данного метода не сгенерирует еще один ход, чтобы сделать его более универсальным
   необходимо преобразовать этот метод в функцию, т.е. сделать его возвращающим строку, таким образом мы сможем передать
   в метод checkWinner две строки
   */

    /*
    Заметки
    Одной из важнейших задач программиста является проверка корректности обрабатываемых данных, это позволяет избежать
    множества ошибок еще на стадии из зарождения. В данном примере мы проверяем правильность введенных ходов и добиваемся
    обработки ошибки во избежание некорретной работы программы. 
    Совет попробуйте запустить программу без проверки и ввести некорректные данные
     */

    static Scanner scanner = new Scanner(System.in);       // Поток ввода
    static String humanStr1;                               // Переменные для хожов игроков
    static String humanStr2;

    public static void main(String[] args) {

        while (true){
            humanStr1 = makeHumanMove();  // Считываем ходы игроков и запоминаем их, чтобы иметь возможность их проверить
            humanStr2 = makeHumanMove();

            if(!checkMove(humanStr1) || !checkMove(humanStr2)){     // Если хотя бы один ввод неправильный, выводим предупреждение и игнорируем итерацию цикла
                System.out.println("Неправильный ход. Введите заново");
                continue;     // Команда пропустить текущую итерацию, начнет цикл следующую итерацию цикла
            }

            System.out.println(checkWinner(humanStr1, humanStr2));   // Выводим победителя
        }
    }

    static boolean checkMove(String humanStr) {  // Проверяем совпадает ли введенное человеком слово с одним из допустимых ходов,
        // если нет, возвращаем false
        if(humanStr.equals("Ножницы")){
            return true;
        }
        if(humanStr.equals("Камень")){
            return true;
        }
        if(humanStr.equals("Бумага")){
            return true;
        }

        return false;
    }

    static String makeHumanMove(){
        System.out.println("Введите свой вариант: ");   // Просим сделать ход человека
       return scanner.next();    // Считываем ход человека
    }

    static String checkWinner(String hum1, String hum2){     // Метод лоя проверки победителя

        System.out.println("Игрок 1: " + hum1 + " Игрок 2: " + hum2);

        if(hum1.equals("Камень") && hum2.equals("Ножницы")){      // Проверяем кто победил
            return "Победа игрока 1";
        }
        if(hum1.equals("Камень") && hum2.equals("Бумага")){
            return "Победа игрока 2";
        }
        if(hum1.equals("Ножницы") && hum2.equals("Бумага")){
            return "Победа игрока 1";
        }
        if(hum1.equals("Ножницы") && hum2.equals("Камень")){
            return "Победа игрока 2";
        }

        if(hum1.equals("Бумага") && hum2.equals("Ножницы")){
            return "Победа игрока 2";
        }
        if(hum1.equals("Бумага") && hum2.equals("Камень")){
            return "Победа игрока 1";
        }

        return "Ничья";           // Если никто не победил, значит ходы совпали, поэтому ничья
    }
}
